{"version":3,"sources":["components/Main.js","components/SortingAlgo/mergeSort.js","components/sleep.js","components/Header.js","App.js","index.js"],"names":["Main","data","currentIndex","currentNextIndex","barWidth","length","className","map","size","index","style","height","width","backgroundColor","merge","left","right","result","leftLen","rightLen","l","r","push","concat","slice","mergeSort","arr","len","mid","Math","floor","sleep","milliseconds","Promise","resolve","setTimeout","Header","useState","btnState","setBtnState","setSize","setArr","setCurrentIndex","setCurrentNextIndex","useEffect","randomArr","Array","from","random","console","log","bubbleOnClick","a","i","j","tmp","selectionOnClick","min","insertionOnClick","key","onClick","disabled","Slider","color","margin","value","onChange","event","newValue","max","sortedArr","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bcccf3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Main.css\";\r\n\r\nfunction Main({ data, currentIndex, currentNextIndex }) {\r\n  // console.log(\"arr in main\", data);\r\n  const barWidth = 700 / data.length;\r\n  return (\r\n    <div className=\"container\">\r\n      {data.map((size, index) => (\r\n        <div\r\n          className=\"bar\"\r\n          style={{\r\n            height: `${size}px`,\r\n            width: `${barWidth}px`,\r\n            backgroundColor:\r\n              currentIndex === index\r\n                ? \"#e84a5f\"\r\n                : currentNextIndex === index\r\n                ? \"#fa7f72\"\r\n                : \"#bce6eb\",\r\n          }}\r\n          key={index}\r\n        >\r\n          {data.length < 20 && <p className=\"barSizeName\">{size}</p>}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","let mergeSort = (arr) => {\r\n  //   console.log(\"Arr in merge function\", arr);\r\n  let len = arr.length;\r\n  if (len < 2) {\r\n    return arr;\r\n  }\r\n  let mid = Math.floor(len / 2),\r\n    left = arr.slice(0, mid),\r\n    right = arr.slice(mid);\r\n\r\n  return merge(mergeSort(left), mergeSort(right));\r\n};\r\n\r\nlet merge = (left, right) => {\r\n  let result = [],\r\n    leftLen = left.length,\r\n    rightLen = right.length,\r\n    l = 0,\r\n    r = 0;\r\n  while (l < leftLen && r < rightLen) {\r\n    if (left[l] < right[r]) {\r\n      result.push(left[l]);\r\n      l++;\r\n    } else {\r\n      result.push(right[r]);\r\n      r++;\r\n    }\r\n  }\r\n  return result.concat(left.slice(l)).concat(right.slice(r));\r\n};\r\n\r\nexport default mergeSort;\r\n","const sleep = (milliseconds) => {\r\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n};\r\n\r\nexport default sleep;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport \"./Header.css\";\r\nimport Main from \"./Main\";\r\nimport mergeSort from \"./SortingAlgo/mergeSort\";\r\nimport sleep from \"./sleep\";\r\n\r\nfunction Header() {\r\n  const [btnState, setBtnState] = useState(0);\r\n  const [size, setSize] = useState(5);\r\n  const [arr, setArr] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(null);\r\n  const [currentNextIndex, setCurrentNextIndex] = useState(null);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setSize(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const randomArr = Array.from(\r\n      { length: size },\r\n      () => Math.floor(Math.random() * 500) + 30\r\n    );\r\n    console.log(\"Arr -> arr\", arr);\r\n    setArr(randomArr);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [size]);\r\n\r\n  const generateRandomList = () => {\r\n    const randomArr = Array.from(\r\n      { length: size },\r\n      () => Math.floor(Math.random() * 500) + 30\r\n    );\r\n    console.log(\"Generated New Arr -> arr\", arr);\r\n    setArr(randomArr);\r\n  };\r\n\r\n  // const bubbleOnClick = () => {\r\n  //   console.log(\"B Original array before Sorting ->\", arr);\r\n  //   const sortedArr = bubbleSort(arr);\r\n  //   const returnedArr = [...sortedArr];\r\n  //   setArr(returnedArr); // to pass the exact same state of returned array to setArr\r\n  //   console.log(\"B Sorted Array ->\", returnedArr);\r\n  //   console.log(\"B Original array after Sorting ->\", arr);\r\n  // };\r\n\r\n  const bubbleOnClick = async () => {\r\n    setBtnState(1);\r\n    console.log(\"B Original array before Sorting ->\", arr);\r\n    let len = arr.length;\r\n    for (let i = 0; i < len; i++) {\r\n      setCurrentIndex(i);\r\n\r\n      for (let j = 0; j < len - i; j++) {\r\n        if (arr[j] > arr[j + 1]) {\r\n          let tmp = arr[j];\r\n          arr[j] = arr[j + 1];\r\n          arr[j + 1] = tmp;\r\n          setCurrentNextIndex(j + 1);\r\n        }\r\n        // setArr([...arr]);\r\n      }\r\n      await sleep(5000 / arr.length);\r\n    }\r\n    setCurrentIndex(null);\r\n    setCurrentNextIndex(null);\r\n    console.log(\"B Original array after Sorting ->\", arr);\r\n    setBtnState(0);\r\n  };\r\n\r\n  const selectionOnClick = async () => {\r\n    setBtnState(1);\r\n    console.log(\"S Original array before Sorting ->\", arr);\r\n    let len = arr.length;\r\n    for (let i = 0; i < len; i++) {\r\n      let min = i;\r\n      setCurrentIndex(i);\r\n      for (let j = i + 1; j < len; j++) {\r\n        if (arr[min] > arr[j]) {\r\n          min = j;\r\n          setCurrentNextIndex(min);\r\n        }\r\n      }\r\n      if (min !== i) {\r\n        let tmp = arr[i];\r\n        arr[i] = arr[min];\r\n        arr[min] = tmp;\r\n        await sleep(5000 / arr.length);\r\n      }\r\n      setArr([...arr]);\r\n      await sleep(5000 / arr.length);\r\n    }\r\n    setCurrentIndex(null);\r\n    setCurrentNextIndex(null);\r\n    console.log(\"S Original array after Sorting ->\", arr);\r\n    setBtnState(0);\r\n  };\r\n\r\n  const insertionOnClick = async () => {\r\n    setBtnState(1);\r\n    console.log(\"I Original array before Sorting ->\", arr);\r\n    let len = arr.length;\r\n    for (let i = 1; i < len; i++) {\r\n      let key = arr[i];\r\n      let j = i - 1;\r\n      setCurrentIndex(i);\r\n      while (j >= 0 && arr[j] > key) {\r\n        setCurrentNextIndex(j);\r\n        arr[j + 1] = arr[j];\r\n        j = j - 1;\r\n      }\r\n      arr[j + 1] = key;\r\n      await sleep(6000 / arr.length);\r\n    }\r\n    setCurrentIndex(null);\r\n    setCurrentNextIndex(null);\r\n    console.log(\"I Original array after Sorting ->\", arr);\r\n    setBtnState(0);\r\n  };\r\n\r\n  const mergeOnClick = () => {\r\n    console.log(\"M Original array before Sorting ->\", arr);\r\n    const sortedArr = mergeSort(arr);\r\n    console.log(\"sortedarr\", sortedArr);\r\n    // const returnedArr = [...sortedArr];\r\n    setArr(sortedArr); // to pass the exact same state of returned array to setArr\r\n    console.log(\"M Sorted Array ->\", sortedArr);\r\n    console.log(\"M Original array after Sorting ->\", arr);\r\n  };\r\n\r\n  // function click() {\r\n  //   console.log(\"Great Shot!\");\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"heading\">\r\n        <div className=\"webName\">\r\n          <h2> Sorting Visualizer </h2>\r\n          <h5> by Shubham </h5>\r\n        </div>\r\n\r\n        <div className=\"separator\"></div>\r\n\r\n        <div className=\"randomList\">\r\n          <button onClick={generateRandomList} disabled={btnState === 1}>\r\n            {\" \"}\r\n            Generate New Array{\" \"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"separator\"></div>\r\n\r\n        <div className=\"range-wrapper\">\r\n          <p> Select Array Range </p>\r\n          <Slider\r\n            disabled={btnState === 1}\r\n            style={{ color: \"#bce6eb\", margin: \"15px\" }}\r\n            value={typeof size === \"number\" ? size : 5}\r\n            onChange={handleSliderChange}\r\n            min={5}\r\n            max={100}\r\n          />\r\n          <p style={{ margin: \"10px\" }}> {size} </p>\r\n        </div>\r\n\r\n        <div className=\"separator\"></div>\r\n\r\n        <div className=\"sort-wrapper\">\r\n          <button onClick={bubbleOnClick} disabled={btnState === 1}>\r\n            {\" \"}\r\n            Bubble Sort{\" \"}\r\n          </button>\r\n          <button onClick={selectionOnClick} disabled={btnState === 1}>\r\n            {\" \"}\r\n            Selection Sort{\" \"}\r\n          </button>\r\n          <button onClick={insertionOnClick} disabled={btnState === 1}>\r\n            {\" \"}\r\n            Insertion Sort{\" \"}\r\n          </button>\r\n          <button onClick={mergeOnClick} disabled={btnState === 1}>\r\n            {\" \"}\r\n            Merge Sort{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Main\r\n        data={arr}\r\n        currentIndex={currentIndex}\r\n        currentNextIndex={currentNextIndex}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}